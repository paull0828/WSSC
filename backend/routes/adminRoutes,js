import express from "express";
import Booking from "../models/booking.js";
import User from "../models/user.js";

const router = express.Router();

// ✅ Update seat prices
router.put("/update-price", async (req, res) => {
  try {
    const { plan, newPrice } = req.body;

    if (!plan || !newPrice) {
      return res
        .status(400)
        .json({ message: "Plan and new price are required." });
    }

    // Update the price in the database (if you store plans in a database)
    // For now, assume prices are stored in a global object or config file
    // Example: Update the price in a mock database
    const updatedPlan = await Booking.updateMany(
      { plan },
      { $set: { price: newPrice } }
    );

    res.json({
      message: `Price for ${plan} updated to ₹${newPrice}.`,
      updatedPlan,
    });
  } catch (error) {
    console.error("❌ Error updating price:", error);
    res.status(500).json({ message: "Error updating price." });
  }
});

// ✅ Get all users
router.get("/bookings", async (req, res) => {
  try {
    // Populate user details (name and email) along with booking details
    const bookings = await Booking.find().populate("user", "name email");

    if (!bookings || bookings.length === 0) {
      return res.status(404).json({ message: "No bookings found." });
    }

    res.json(bookings);
  } catch (error) {
    console.error("❌ Error fetching bookings:", error);
    res.status(500).json({ message: "Error fetching bookings." });
  }
});
// ✅ Delete a user
router.delete("/delete-user/:id", async (req, res) => {
  try {
    const { id } = req.params;

    const deletedUser = await User.findByIdAndDelete(id);
    if (!deletedUser) {
      return res.status(404).json({ message: "User not found." });
    }

    res.json({ message: "User deleted successfully.", deletedUser });
  } catch (error) {
    console.error("❌ Error deleting user:", error);
    res.status(500).json({ message: "Error deleting user." });
  }
});

export default router;
